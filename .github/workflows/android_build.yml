name: Android Build ## name of the workflow

on:
  workflow_dispatch: # To trigger manual build
  release:
    types: [published] # only run the workflow when a new release has been published

jobs:
  android-build:
    name: Android Build
    runs-on: ubuntu-latest # using ubuntu latest version / or you can use a specific version

    steps:
      - name: Check out Git repository # clone the repo to local ci workspace
        uses: actions/checkout@v2

      - name: Set up our JDK environment # setup JDK environment: mandatory as we need to build  android project
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - name: Install dependencies # install project deps with --frozen-lockfile to make sure we will have the same packages version ( very recommended  on running yarn install on ci)
        run: npm ci --legacy-peer-deps

      - name: Install local dependencies
        run: cd apps/mobile && npm i --legacy-peer-deps

      ## configure cash for gradle : will help to reduce build time
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      - name: Make Gradlew Executable
        run: cd apps/mobile/android && chmod +x ./gradlew

      - name: Generate App APK
        run: |
          cd apps/mobile/android && ./gradlew app:assembleRelease --no-daemon

      ## sign generated apk
      - name: Sign APK
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: apps/mobile/android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: apps/mobile/android/app/build/outputs/apk/release

  deploy:
    needs: [android-build]
    if: success()
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository # clone the repo to local ci workspace
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v3
        with:
          name: app-release.apk

      - name: Set up our JDK environment # setup JDK environment: mandatory as we need to build  android project
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - name: Upload artifact to App Center
        uses: wzieba/AppCenter-Github-Action@v1
        with:
          appName: davi.santos/Codemagic-POC
          token: ${{secrets.APPCENTER_TOKEN_ANDROID}}
          group: Public
          file: app-release.apk
          notifyTesters: true
          debug: false

      - name: Delete Artifact
        uses: geekyeggo/delete-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
